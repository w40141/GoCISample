name: CI
permissions:
  contents: read
on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/ci.yaml
      - '**.go'
      - go.mod
      - go.sum
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/ci.yaml
      - '**.go'
      - go.mod
      - go.sum
    types:
      - labeled
jobs:
  remove_label:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{(github.event.action == 'labeled') && (github.event.label.name == 'CI')}}
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Remove label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              name: "CI"
            }
            await github.rest.issues.removeLabel(params)
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{((github.event.action == 'labeled') && (github.event.label.name == 'CI')) || (github.event_name == 'push')}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run go-test
        run: go test ./... -v
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{((github.event.action == 'labeled') && (github.event.label.name == 'CI')) || (github.event_name == 'push')}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run go-tidy
        run: go mod tidy && git diff --exit-code
      - name: Run go-download
        run: go mod download
      - name: run go-verify
        run: go mod verify
      - name: Run go-build
        run: go build -o /dev/null ./...
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{((github.event.action == 'labeled') && (github.event.label.name == 'CI')) || (github.event_name == 'push')}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    if: ${{((github.event.action == 'labeled') && (github.event.label.name == 'CI')) || (github.event_name == 'push')}}
    needs:
      - test
      - build
      - lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@latest
      - name: Install golines
        run: go install github.com/segmentio/golines@latest
      - name: Format by golines
        run: golines --base-formatter=gofumpt -w ./
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Format by goimports
        run: goimports -w .
      - name: Auto commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Apply Code formatter changes"
